# Choregraphe bezier export in Python.
from naoqi import ALProxy
names = list()
times = list()
keys = list()

names.append("HeadPitch")
times.append([1.04, 2.04, 2.96])
keys.append([[0.00762796, [3, -0.36, 0], [3, 0.333333, 0]], [0.00762796, [3, -0.333333, 0], [3, 0.306667, 0]], [0.0137641, [3, -0.306667, 0], [3, 0, 0]]])

names.append("HeadYaw")
times.append([1.04, 2.04, 2.96])
keys.append([[0.00149202, [3, -0.36, 0], [3, 0.333333, 0]], [0.00149202, [3, -0.333333, 0], [3, 0.306667, 0]], [0.00149202, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LAnklePitch")
times.append([1.04, 2.04, 2.96])
keys.append([[0.00762796, [3, -0.36, 0], [3, 0.333333, 0]], [-0.357464, [3, -0.333333, 0], [3, 0.306667, 0]], [0.00302601, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LAnkleRoll")
times.append([1.04, 2.04, 2.96])
keys.append([[0.00771189, [3, -0.36, 0], [3, 0.333333, 0]], [0.00771189, [3, -0.333333, 0], [3, 0.306667, 0]], [4.19617e-05, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LElbowRoll")
times.append([1.04, 2.04, 2.96])
keys.append([[-0.0659201, [3, -0.36, 0], [3, 0.333333, 0]], [-1.41124, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.05825, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LElbowYaw")
times.append([1.04, 2.04, 2.96])
keys.append([[-0.0291879, [3, -0.36, 0], [3, 0.333333, 0]], [-1.32849, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.046062, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LHand")
times.append([1.04, 2.04, 2.96])
keys.append([[0.0144, [3, -0.36, 0], [3, 0.333333, 0]], [0.268, [3, -0.333333, 0], [3, 0.306667, 0]], [0.0292, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LHipPitch")
times.append([1.04, 2.04, 2.96])
keys.append([[4.19617e-05, [3, -0.36, 0], [3, 0.333333, 0]], [-0.447886, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.00609398, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LHipRoll")
times.append([1.04, 2.04, 2.96])
keys.append([[-0.00149202, [3, -0.36, 0], [3, 0.333333, 0]], [-0.00149202, [3, -0.333333, 0], [3, 0.306667, 0]], [0.024586, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LHipYawPitch")
times.append([1.04, 2.04, 2.96])
keys.append([[-0.00302601, [3, -0.36, 0], [3, 0.333333, 0]], [0.00771189, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.00609398, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LKneePitch")
times.append([1.04, 2.04, 2.96])
keys.append([[-0.00924587, [3, -0.36, 0], [3, 0.333333, 0]], [0.705598, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.00771189, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LShoulderPitch")
times.append([1.04, 2.04, 2.96])
keys.append([[0.082794, [3, -0.36, 0], [3, 0.333333, 0]], [1.19034, [3, -0.333333, 0], [3, 0.306667, 0]], [0.168698, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LShoulderRoll")
times.append([1.04, 2.04, 2.96])
keys.append([[-4.19617e-05, [3, -0.36, 0], [3, 0.333333, 0]], [1.22409, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.00310993, [3, -0.306667, 0], [3, 0, 0]]])

names.append("LWristYaw")
times.append([1.04, 2.04, 2.96])
keys.append([[-0.01845, [3, -0.36, 0], [3, 0.333333, 0]], [0.11194, [3, -0.333333, 0], [3, 0.306667, 0]], [0.00302601, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RAnklePitch")
times.append([1.04, 2.04, 2.96])
keys.append([[0.0061779, [3, -0.36, 0], [3, 0.333333, 0]], [-0.351244, [3, -0.333333, 0], [3, 0.306667, 0]], [4.19617e-05, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RAnkleRoll")
times.append([1.04, 2.04, 2.96])
keys.append([[-0.00609398, [3, -0.36, 0], [3, 0.333333, 0]], [-0.00609398, [3, -0.333333, 0], [3, 0.306667, 0]], [0.00157595, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RElbowRoll")
times.append([1.04, 2.04, 2.96])
keys.append([[0.07214, [3, -0.36, 0], [3, 0.333333, 0]], [1.53097, [3, -0.333333, 0], [3, 0.306667, 0]], [0.0583339, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RElbowYaw")
times.append([1.04, 2.04, 2.96])
keys.append([[0.029104, [3, -0.36, 0], [3, 0.333333, 0]], [0.736278, [3, -0.333333, 0], [3, 0.306667, 0]], [0.0429101, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RHand")
times.append([1.04, 2.04, 2.96])
keys.append([[0.0112, [3, -0.36, 0], [3, 0.333333, 0]], [0.0108, [3, -0.333333, 0], [3, 0.306667, 0]], [0.02, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RHipPitch")
times.append([1.04, 2.04, 2.96])
keys.append([[-4.19617e-05, [3, -0.36, 0], [3, 0.333333, 0]], [-0.446436, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.0061779, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RHipRoll")
times.append([1.04, 2.04, 2.96])
keys.append([[0.00310993, [3, -0.36, 0], [3, 0.333333, 0]], [0.00310993, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.02757, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RHipYawPitch")
times.append([1.04, 2.04, 2.96])
keys.append([[-0.00302601, [3, -0.36, 0], [3, 0.333333, 0]], [0.00771189, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.00609398, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RKneePitch")
times.append([1.04, 2.04, 2.96])
keys.append([[-0.00609398, [3, -0.36, 0], [3, 0.333333, 0]], [0.70875, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.0122299, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RShoulderPitch")
times.append([1.04, 2.04, 2.96])
keys.append([[0.0890141, [3, -0.36, 0], [3, 0.333333, 0]], [0.7471, [3, -0.333333, 0], [3, 0.306667, 0]], [0.181054, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RShoulderRoll")
times.append([1.04, 2.04, 2.96])
keys.append([[0.00455999, [3, -0.36, 0], [3, 0.333333, 0]], [-1.15514, [3, -0.333333, 0], [3, 0.306667, 0]], [-0.00157595, [3, -0.306667, 0], [3, 0, 0]]])

names.append("RWristYaw")
times.append([1.04, 2.04, 2.96])
keys.append([[-0.00924587, [3, -0.36, 0], [3, 0.333333, 0]], [-0.0153821, [3, -0.333333, 0], [3, 0.306667, 0]], [0.00762796, [3, -0.306667, 0], [3, 0, 0]]])

try:
  # uncomment the following line and modify the IP if you use this script outside Choregraphe.
  # motion = ALProxy("ALMotion", IP, 9559)
  motion = ALProxy("ALMotion")
  motion.angleInterpolationBezier(names, times, keys)
except BaseException, err:
  print err
